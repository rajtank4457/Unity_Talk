"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/uploadthing";
exports.ids = ["vendor-chunks/uploadthing"];
exports.modules = {

/***/ "(ssr)/./node_modules/uploadthing/dist/chunk-5KWT532U.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/uploadthing/dist/chunk-5KWT532U.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   maybeParseResponseXML: () => (/* binding */ maybeParseResponseXML)\n/* harmony export */ });\n// src/internal/s3-error-parser.ts\nvar maybeParseResponseXML = (maybeXml) => {\n  const codeMatch = maybeXml.match(/<Code>(.*?)<\\/Code>/s);\n  const messageMatch = maybeXml.match(/<Message>(.*?)<\\/Message>/s);\n  const code = codeMatch == null ? void 0 : codeMatch[1];\n  const message = messageMatch == null ? void 0 : messageMatch[1];\n  if (!code || !message)\n    return null;\n  return { code: s3CodeToUploadThingCode[code] ?? DEFAULT_ERROR_CODE, message };\n};\nvar DEFAULT_ERROR_CODE = \"UPLOAD_FAILED\";\nvar s3CodeToUploadThingCode = {\n  AccessDenied: \"FORBIDDEN\",\n  // 403 Forbidden\n  EntityTooSmall: \"TOO_SMALL\",\n  // 400 Bad Request\n  EntityTooLarge: \"TOO_LARGE\",\n  // 400 Bad Request\n  ExpiredToken: \"FORBIDDEN\",\n  // 400 Bad Request\n  IncorrectNumberOfFilesInPostRequest: \"TOO_MANY_FILES\",\n  // 400 Bad Request\n  InternalError: \"INTERNAL_SERVER_ERROR\",\n  // 500 Internal Server Error\n  KeyTooLongError: \"KEY_TOO_LONG\",\n  // 400 Bad Request\n  MaxMessageLengthExceeded: \"TOO_LARGE\"\n  // 400 Bad Request\n};\n\n\n//# sourceMappingURL=chunk-5KWT532U.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvZGlzdC9jaHVuay01S1dUNTMyVS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyJEOlxcVU5JVFktVEFMS1xcbm9kZV9tb2R1bGVzXFx1cGxvYWR0aGluZ1xcZGlzdFxcY2h1bmstNUtXVDUzMlUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbnRlcm5hbC9zMy1lcnJvci1wYXJzZXIudHNcbnZhciBtYXliZVBhcnNlUmVzcG9uc2VYTUwgPSAobWF5YmVYbWwpID0+IHtcbiAgY29uc3QgY29kZU1hdGNoID0gbWF5YmVYbWwubWF0Y2goLzxDb2RlPiguKj8pPFxcL0NvZGU+L3MpO1xuICBjb25zdCBtZXNzYWdlTWF0Y2ggPSBtYXliZVhtbC5tYXRjaCgvPE1lc3NhZ2U+KC4qPyk8XFwvTWVzc2FnZT4vcyk7XG4gIGNvbnN0IGNvZGUgPSBjb2RlTWF0Y2ggPT0gbnVsbCA/IHZvaWQgMCA6IGNvZGVNYXRjaFsxXTtcbiAgY29uc3QgbWVzc2FnZSA9IG1lc3NhZ2VNYXRjaCA9PSBudWxsID8gdm9pZCAwIDogbWVzc2FnZU1hdGNoWzFdO1xuICBpZiAoIWNvZGUgfHwgIW1lc3NhZ2UpXG4gICAgcmV0dXJuIG51bGw7XG4gIHJldHVybiB7IGNvZGU6IHMzQ29kZVRvVXBsb2FkVGhpbmdDb2RlW2NvZGVdID8/IERFRkFVTFRfRVJST1JfQ09ERSwgbWVzc2FnZSB9O1xufTtcbnZhciBERUZBVUxUX0VSUk9SX0NPREUgPSBcIlVQTE9BRF9GQUlMRURcIjtcbnZhciBzM0NvZGVUb1VwbG9hZFRoaW5nQ29kZSA9IHtcbiAgQWNjZXNzRGVuaWVkOiBcIkZPUkJJRERFTlwiLFxuICAvLyA0MDMgRm9yYmlkZGVuXG4gIEVudGl0eVRvb1NtYWxsOiBcIlRPT19TTUFMTFwiLFxuICAvLyA0MDAgQmFkIFJlcXVlc3RcbiAgRW50aXR5VG9vTGFyZ2U6IFwiVE9PX0xBUkdFXCIsXG4gIC8vIDQwMCBCYWQgUmVxdWVzdFxuICBFeHBpcmVkVG9rZW46IFwiRk9SQklEREVOXCIsXG4gIC8vIDQwMCBCYWQgUmVxdWVzdFxuICBJbmNvcnJlY3ROdW1iZXJPZkZpbGVzSW5Qb3N0UmVxdWVzdDogXCJUT09fTUFOWV9GSUxFU1wiLFxuICAvLyA0MDAgQmFkIFJlcXVlc3RcbiAgSW50ZXJuYWxFcnJvcjogXCJJTlRFUk5BTF9TRVJWRVJfRVJST1JcIixcbiAgLy8gNTAwIEludGVybmFsIFNlcnZlciBFcnJvclxuICBLZXlUb29Mb25nRXJyb3I6IFwiS0VZX1RPT19MT05HXCIsXG4gIC8vIDQwMCBCYWQgUmVxdWVzdFxuICBNYXhNZXNzYWdlTGVuZ3RoRXhjZWVkZWQ6IFwiVE9PX0xBUkdFXCJcbiAgLy8gNDAwIEJhZCBSZXF1ZXN0XG59O1xuXG5leHBvcnQge1xuICBtYXliZVBhcnNlUmVzcG9uc2VYTUxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay01S1dUNTMyVS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uploadthing/dist/chunk-5KWT532U.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/uploadthing/dist/chunk-T2XS27LC.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/uploadthing/dist/chunk-T2XS27LC.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __commonJS: () => (/* binding */ __commonJS),\n/* harmony export */   __require: () => (/* binding */ __require),\n/* harmony export */   __toESM: () => (/* binding */ __toESM)\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\")\n    return require.apply(this, arguments);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n\n//# sourceMappingURL=chunk-T2XS27LC.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvZGlzdC9jaHVuay1UMlhTMjdMQy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwyREFBMkQsYUFBYTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsOEJBQThCO0FBQ3ZHO0FBQ0E7O0FBTUU7QUFDRiIsInNvdXJjZXMiOlsiRDpcXFVOSVRZLVRBTEtcXG5vZGVfbW9kdWxlc1xcdXBsb2FkdGhpbmdcXGRpc3RcXGNodW5rLVQyWFMyN0xDLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19jcmVhdGUgPSBPYmplY3QuY3JlYXRlO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9fZ2V0UHJvdG9PZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fcmVxdWlyZSA9IC8qIEBfX1BVUkVfXyAqLyAoKHgpID0+IHR5cGVvZiByZXF1aXJlICE9PSBcInVuZGVmaW5lZFwiID8gcmVxdWlyZSA6IHR5cGVvZiBQcm94eSAhPT0gXCJ1bmRlZmluZWRcIiA/IG5ldyBQcm94eSh4LCB7XG4gIGdldDogKGEsIGIpID0+ICh0eXBlb2YgcmVxdWlyZSAhPT0gXCJ1bmRlZmluZWRcIiA/IHJlcXVpcmUgOiBhKVtiXVxufSkgOiB4KShmdW5jdGlvbih4KSB7XG4gIGlmICh0eXBlb2YgcmVxdWlyZSAhPT0gXCJ1bmRlZmluZWRcIilcbiAgICByZXR1cm4gcmVxdWlyZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB0aHJvdyBuZXcgRXJyb3IoJ0R5bmFtaWMgcmVxdWlyZSBvZiBcIicgKyB4ICsgJ1wiIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn0pO1xudmFyIF9fY29tbW9uSlMgPSAoY2IsIG1vZCkgPT4gZnVuY3Rpb24gX19yZXF1aXJlMigpIHtcbiAgcmV0dXJuIG1vZCB8fCAoMCwgY2JbX19nZXRPd25Qcm9wTmFtZXMoY2IpWzBdXSkoKG1vZCA9IHsgZXhwb3J0czoge30gfSkuZXhwb3J0cywgbW9kKSwgbW9kLmV4cG9ydHM7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fdG9FU00gPSAobW9kLCBpc05vZGVNb2RlLCB0YXJnZXQpID0+ICh0YXJnZXQgPSBtb2QgIT0gbnVsbCA/IF9fY3JlYXRlKF9fZ2V0UHJvdG9PZihtb2QpKSA6IHt9LCBfX2NvcHlQcm9wcyhcbiAgLy8gSWYgdGhlIGltcG9ydGVyIGlzIGluIG5vZGUgY29tcGF0aWJpbGl0eSBtb2RlIG9yIHRoaXMgaXMgbm90IGFuIEVTTVxuICAvLyBmaWxlIHRoYXQgaGFzIGJlZW4gY29udmVydGVkIHRvIGEgQ29tbW9uSlMgZmlsZSB1c2luZyBhIEJhYmVsLVxuICAvLyBjb21wYXRpYmxlIHRyYW5zZm9ybSAoaS5lLiBcIl9fZXNNb2R1bGVcIiBoYXMgbm90IGJlZW4gc2V0KSwgdGhlbiBzZXRcbiAgLy8gXCJkZWZhdWx0XCIgdG8gdGhlIENvbW1vbkpTIFwibW9kdWxlLmV4cG9ydHNcIiBmb3Igbm9kZSBjb21wYXRpYmlsaXR5LlxuICBpc05vZGVNb2RlIHx8ICFtb2QgfHwgIW1vZC5fX2VzTW9kdWxlID8gX19kZWZQcm9wKHRhcmdldCwgXCJkZWZhdWx0XCIsIHsgdmFsdWU6IG1vZCwgZW51bWVyYWJsZTogdHJ1ZSB9KSA6IHRhcmdldCxcbiAgbW9kXG4pKTtcblxuZXhwb3J0IHtcbiAgX19yZXF1aXJlLFxuICBfX2NvbW1vbkpTLFxuICBfX3RvRVNNXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstVDJYUzI3TEMubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uploadthing/dist/chunk-T2XS27LC.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/uploadthing/dist/client.mjs":
/*!**************************************************!*\
  !*** ./node_modules/uploadthing/dist/client.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DANGEROUS__uploadFiles: () => (/* binding */ DANGEROUS__uploadFiles),\n/* harmony export */   INTERNAL_doFormatting: () => (/* binding */ INTERNAL_doFormatting),\n/* harmony export */   allowedContentTextLabelGenerator: () => (/* binding */ allowedContentTextLabelGenerator),\n/* harmony export */   capitalizeStart: () => (/* binding */ capitalizeStart),\n/* harmony export */   classNames: () => (/* binding */ classNames),\n/* harmony export */   contentFieldToContent: () => (/* binding */ contentFieldToContent),\n/* harmony export */   genUploader: () => (/* binding */ genUploader),\n/* harmony export */   generateClientDropzoneAccept: () => (/* binding */ generateClientDropzoneAccept),\n/* harmony export */   generateMimeTypes: () => (/* binding */ generateMimeTypes),\n/* harmony export */   generatePermittedFileTypes: () => (/* binding */ generatePermittedFileTypes),\n/* harmony export */   styleFieldToClassName: () => (/* binding */ styleFieldToClassName),\n/* harmony export */   styleFieldToCssObject: () => (/* binding */ styleFieldToCssObject)\n/* harmony export */ });\n/* harmony import */ var _chunk_5KWT532U_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-5KWT532U.mjs */ \"(ssr)/./node_modules/uploadthing/dist/chunk-5KWT532U.mjs\");\n/* harmony import */ var _chunk_T2XS27LC_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-T2XS27LC.mjs */ \"(ssr)/./node_modules/uploadthing/dist/chunk-T2XS27LC.mjs\");\n/* harmony import */ var _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @uploadthing/shared */ \"(ssr)/./node_modules/@uploadthing/shared/dist/index.mjs\");\n\n\n\n// src/client.ts\n\n\n// src/internal/component-theming.ts\n\nvar generatePermittedFileTypes = (config) => {\n  const fileTypes = config ? (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.objectKeys)(config) : [];\n  const maxFileCount = config ? Object.values(config).map((v) => v.maxFileCount) : [];\n  return { fileTypes, multiple: maxFileCount.some((v) => v && v > 1) };\n};\nvar capitalizeStart = (str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\nvar INTERNAL_doFormatting = (config) => {\n  if (!config)\n    return \"\";\n  const allowedTypes = (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.objectKeys)(config);\n  const formattedTypes = allowedTypes.map((f) => f === \"blob\" ? \"file\" : f);\n  if (formattedTypes.length > 1) {\n    const lastType = formattedTypes.pop();\n    return `${formattedTypes.join(\"s, \")} and ${lastType}s`;\n  }\n  const key = allowedTypes[0];\n  const formattedKey = formattedTypes[0];\n  const { maxFileSize, maxFileCount } = config[key];\n  if (maxFileCount && maxFileCount > 1) {\n    return `${formattedKey}s up to ${maxFileSize}, max ${maxFileCount}`;\n  } else {\n    return `${formattedKey} (${maxFileSize})`;\n  }\n};\nvar allowedContentTextLabelGenerator = (config) => {\n  return capitalizeStart(INTERNAL_doFormatting(config));\n};\nvar styleFieldToClassName = (styleField, args) => {\n  if (typeof styleField === \"string\")\n    return styleField;\n  if (typeof styleField === \"function\") {\n    const result = styleField(args);\n    if (typeof result === \"string\")\n      return result;\n  }\n  return \"\";\n};\nvar styleFieldToCssObject = (styleField, args) => {\n  if (typeof styleField === \"object\")\n    return styleField;\n  if (typeof styleField === \"function\") {\n    const result = styleField(args);\n    if (typeof result === \"object\")\n      return result;\n  }\n  return {};\n};\nvar contentFieldToContent = (contentField, arg) => {\n  if (!contentField)\n    return null;\n  if (typeof contentField !== \"function\")\n    return contentField;\n  if (typeof contentField === \"function\") {\n    const result = contentField(arg);\n    return result;\n  }\n};\n\n// src/client.ts\nfunction fetchWithProgress(url, opts = {}, onProgress, onUploadBegin) {\n  return new Promise((res, rej) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(opts.method ?? \"get\", url);\n    opts.headers && Object.keys(opts.headers).forEach(\n      (h) => opts.headers && xhr.setRequestHeader(h, opts.headers.get(h) ?? \"\")\n    );\n    xhr.onload = (e) => {\n      res(e.target);\n    };\n    xhr.onerror = rej;\n    if (xhr.upload && onProgress)\n      xhr.upload.onprogress = onProgress;\n    if (xhr.upload && onUploadBegin)\n      xhr.upload.onloadstart = onUploadBegin;\n    xhr.send(opts.body);\n  });\n}\nvar createAPIRequestUrl = (config) => {\n  const url = new URL(\n    config.url ?? `${window.location.origin}/api/uploadthing`\n  );\n  const queryParams = new URLSearchParams(url.search);\n  queryParams.set(\"actionType\", config.actionType);\n  queryParams.set(\"slug\", config.slug);\n  url.search = queryParams.toString();\n  return url.toString();\n};\nvar DANGEROUS__uploadFiles = async (opts, config) => {\n  const s3ConnectionRes = await fetch(\n    createAPIRequestUrl({\n      url: config == null ? void 0 : config.url,\n      slug: String(opts.endpoint),\n      actionType: \"upload\"\n    }),\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        files: opts.files.map((f) => f.name),\n        input: opts.input\n      }),\n      // Express requires Content-Type to be explicitly set to parse body properly\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n  ).then(async (res) => {\n    if (!res.ok) {\n      const error = await _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError.fromResponse(res);\n      throw error;\n    }\n    const jsonOrError = await (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.safeParseJSON)(res);\n    if (jsonOrError instanceof Error) {\n      throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError({\n        code: \"BAD_REQUEST\",\n        message: jsonOrError.message,\n        cause: res\n      });\n    }\n    return jsonOrError;\n  });\n  if (!s3ConnectionRes || !Array.isArray(s3ConnectionRes)) {\n    throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError({\n      code: \"BAD_REQUEST\",\n      message: \"No URL. How did you even get here?\",\n      cause: s3ConnectionRes\n    });\n  }\n  const fileUploadPromises = s3ConnectionRes.map(async (presigned) => {\n    const file = opts.files.find((f) => f.name === presigned.name);\n    if (!file) {\n      console.error(\"No file found for presigned URL\", presigned);\n      throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError({\n        code: \"NOT_FOUND\",\n        message: \"No file found for presigned URL\",\n        cause: `Expected file with name ${presigned.name} but got '${opts.files.join(\",\")}'`\n      });\n    }\n    const { url, fields } = presigned.presignedUrl;\n    const formData = new FormData();\n    if (presigned.fileType === file.type.split(\"/\")[0] || presigned.fileType === file.type) {\n      formData.append(\"Content-Type\", file.type);\n    } else if (presigned.fileType === \"blob\") {\n      formData.append(\"Content-Type\", \"application/octet-stream\");\n    } else if (presigned.fileType === \"pdf\") {\n      formData.append(\"Content-Type\", \"application/pdf\");\n    }\n    Object.entries({ ...fields, file }).forEach(([key, value]) => {\n      formData.append(key, value);\n    });\n    const upload = await fetchWithProgress(\n      url,\n      {\n        method: \"POST\",\n        body: formData,\n        headers: new Headers({\n          Accept: \"application/xml\"\n        })\n      },\n      (progressEvent) => {\n        var _a;\n        return (_a = opts.onUploadProgress) == null ? void 0 : _a.call(opts, {\n          file: file.name,\n          progress: progressEvent.loaded / progressEvent.total * 100\n        });\n      },\n      () => {\n        var _a;\n        (_a = opts.onUploadBegin) == null ? void 0 : _a.call(opts, {\n          file: file.name\n        });\n      }\n    );\n    if (upload.status > 299 || upload.status < 200) {\n      await fetch(\n        createAPIRequestUrl({\n          url: config == null ? void 0 : config.url,\n          slug: String(opts.endpoint),\n          actionType: \"failure\"\n        }),\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            fileKey: fields.key\n          })\n        }\n      );\n      const parsed = (0,_chunk_5KWT532U_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeParseResponseXML)(upload.responseText);\n      if (parsed == null ? void 0 : parsed.message) {\n        throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError({\n          code: parsed.code,\n          message: parsed.message\n        });\n      } else {\n        throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError({\n          code: \"UPLOAD_FAILED\",\n          message: `Failed to upload file ${file.name} to S3`,\n          cause: upload.responseText\n        });\n      }\n    }\n    const genUrl = \"https://utfs.io/f/\" + encodeURIComponent(fields.key);\n    await (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.pollForFileData)(presigned.key);\n    const ret = {\n      fileName: file.name,\n      name: file.name,\n      fileSize: file.size,\n      size: file.size,\n      fileKey: presigned.key,\n      key: presigned.key,\n      fileUrl: genUrl,\n      url: genUrl\n    };\n    return ret;\n  });\n  return Promise.all(fileUploadPromises);\n};\nvar genUploader = () => {\n  return DANGEROUS__uploadFiles;\n};\nvar classNames = (...classes) => {\n  return classes.filter(Boolean).join(\" \");\n};\nvar generateMimeTypes = (fileTypes) => {\n  const accepted = fileTypes.map((type) => {\n    if (type === \"blob\")\n      return \"blob\";\n    if (type === \"pdf\")\n      return \"application/pdf\";\n    if (type.includes(\"/\"))\n      return type;\n    else\n      return `${type}/*`;\n  });\n  if (accepted.includes(\"blob\")) {\n    return void 0;\n  }\n  return accepted;\n};\nvar generateClientDropzoneAccept = (fileTypes) => {\n  const mimeTypes = generateMimeTypes(fileTypes);\n  if (!mimeTypes)\n    return void 0;\n  return Object.fromEntries(mimeTypes.map((type) => [type, []]));\n};\n\n//# sourceMappingURL=client.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uploadthing/dist/client.mjs\n");

/***/ })

};
;